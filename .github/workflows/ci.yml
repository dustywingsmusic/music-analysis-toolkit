name: CI

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  frontend-test:
    name: Frontend Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Run ESLint and fix issues
      run: |
        echo "üìã Running ESLint..."
        
        if npm run lint -- --fix; then
          echo "‚úÖ ESLint passed without issues"
        else
          echo "üîß ESLint found issues, attempting to fix..."
          npm run lint -- --fix || true
        fi

    - name: Check for remaining lint issues
      run: |
        echo "üîç Checking for remaining lint issues..."
        
        if npm run lint; then
          echo "‚úÖ All linting issues resolved"
        else
          echo "‚ùå ESLint found issues that couldn't be auto-fixed"
          echo ""
          echo "Please review and fix the remaining linting errors:"
          echo "Run 'npm run lint -- --fix' locally to auto-fix what's possible"
          npm run lint
          exit 1
        fi

    - name: Run TypeScript check
      run: |
        echo "üîç Running TypeScript compilation check..."
        
        if [ -f "tsconfig.app.json" ]; then
          echo "Found tsconfig.app.json, running TypeScript check..."
          if npx tsc --noEmit --project tsconfig.app.json; then
            echo "‚úÖ TypeScript compilation successful"
          else
            echo "‚ùå TypeScript compilation failed"
            echo ""
            echo "Please fix the TypeScript errors above"
            exit 1
          fi
        elif [ -f "tsconfig.json" ]; then
          echo "Found tsconfig.json, running TypeScript check..."
          if npx tsc --noEmit --project tsconfig.json; then
            echo "‚úÖ TypeScript compilation successful"
          else
            echo "‚ùå TypeScript compilation failed"
            echo ""
            echo "Please fix the TypeScript errors above"
            exit 1
          fi
        else
          echo "‚ùå No TypeScript config file found"
          exit 1
        fi

    - name: Run unit tests
      run: npm run test:ci

    - name: Build frontend
      run: npm run build

    - name: Run E2E tests
      run: npm run test:e2e
      env:
        CI: true

  backend-test:
    name: Backend Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
    - uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libsndfile1 ffmpeg

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run backend linting (if available)
      run: |
        if [ -f "requirements-dev.txt" ]; then
          pip install -r requirements-dev.txt
          python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || true
        fi

    - name: Run backend tests
      run: |
        if [ -d "tests" ]; then
          python -m pytest tests/ -v || echo "No tests found or tests failed"
        else
          echo "No test directory found, skipping backend tests"
        fi

    - name: Test FastAPI startup
      run: |
        timeout 10s uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload &
        sleep 5
        curl -f http://localhost:8000/docs || echo "API startup test completed"

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [frontend-test, backend-test]

    services:
      backend:
        image: python:3.9
        options: --health-cmd "curl -f http://localhost:8000/health || exit 1" --health-interval 30s --health-timeout 10s --health-retries 3

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libsndfile1 ffmpeg

    - name: Start backend
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        uvicorn app.main:app --host 0.0.0.0 --port 8000 &
        sleep 10

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci

    - name: Run integration tests
      run: |
        cd frontend
        VITE_API_URL=http://localhost:8000 npm run test:e2e
      env:
        CI: true