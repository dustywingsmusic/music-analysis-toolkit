#!/bin/bash
set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üîç Running full project validation (mirrors CI)...${NC}\n"

# Check if we're in the right directory
if [[ ! -f "QUALITY_BASELINE.md" ]]; then
    echo -e "${RED}‚ùå Error: Please run from project root directory${NC}"
    exit 1
fi

# Function to print section headers
print_section() {
    echo -e "\n${BLUE}=== $1 ===${NC}"
}

# Function to handle command execution with nice output
run_check() {
    local description="$1"
    local command="$2"
    echo -e "${YELLOW}‚è≥ $description${NC}"
    if eval "$command"; then
        echo -e "${GREEN}‚úÖ $description - PASSED${NC}"
    else
        echo -e "${RED}‚ùå $description - FAILED${NC}"
        return 1
    fi
}

# Track overall success
OVERALL_SUCCESS=0

print_section "Frontend Validation"
if cd frontend 2>/dev/null; then
    run_check "Installing dependencies" "npm ci --silent" || OVERALL_SUCCESS=1
    run_check "TypeScript compilation" "npm run type-check" || OVERALL_SUCCESS=1
    run_check "ESLint checks" "npm run lint" || OVERALL_SUCCESS=1
    run_check "Unit tests" "npm run test:run" || OVERALL_SUCCESS=1
    cd ..
else
    echo -e "${RED}‚ùå Frontend directory not found${NC}"
    OVERALL_SUCCESS=1
fi

print_section "Backend Validation"
if cd backend 2>/dev/null; then
    run_check "Installing Python dependencies" "python -m pip install -r requirements.txt -q" || OVERALL_SUCCESS=1
    run_check "Black formatting check" "python -m black --check ." || OVERALL_SUCCESS=1
    run_check "Import sorting check" "python -m isort --check-only ." || OVERALL_SUCCESS=1
    run_check "Flake8 linting" "python -m flake8 ." || OVERALL_SUCCESS=1
    cd ..
else
    echo -e "${RED}‚ùå Backend directory not found${NC}"
    OVERALL_SUCCESS=1
fi

print_section "Pre-commit Validation"
if command -v pre-commit >/dev/null 2>&1; then
    run_check "Pre-commit hooks validation" "pre-commit run --all-files" || OVERALL_SUCCESS=1
else
    echo -e "${YELLOW}‚ö†Ô∏è Pre-commit not installed. Run: pip install pre-commit${NC}"
    OVERALL_SUCCESS=1
fi

print_section "Summary"
if [[ $OVERALL_SUCCESS -eq 0 ]]; then
    echo -e "${GREEN}üéâ All validations passed! Your code is ready.${NC}"
    echo -e "${BLUE}üí° To run individual checks:${NC}"
    echo -e "  Frontend: ${YELLOW}cd frontend && npm run quality${NC}"
    echo -e "  Backend:  ${YELLOW}cd backend && python -m flake8 . && python -m black --check .${NC}"
else
    echo -e "${RED}‚ùå Some validations failed. Please fix issues before committing.${NC}"
    echo -e "${BLUE}üí° Quick fixes:${NC}"
    echo -e "  Auto-format: ${YELLOW}cd frontend && npm run lint:fix${NC}"
    echo -e "  Auto-format: ${YELLOW}cd backend && python -m black . && python -m isort .${NC}"
    echo -e "  Run pre-commit: ${YELLOW}pre-commit run --all-files${NC}"
fi

echo -e "\n${BLUE}üìä For current baselines, see: QUALITY_BASELINE.md${NC}"
exit $OVERALL_SUCCESS
